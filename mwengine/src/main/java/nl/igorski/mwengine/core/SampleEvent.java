/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.mwengine.core;

public class SampleEvent extends BaseAudioEvent {
  private transient long swigCPtr;

  protected SampleEvent(long cPtr, boolean cMemoryOwn) {
    super(MWEngineCoreJNI.SampleEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SampleEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MWEngineCoreJNI.delete_SampleEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SampleEvent() {
    this(MWEngineCoreJNI.new_SampleEvent__SWIG_0(), true);
  }

  public SampleEvent(BaseInstrument aInstrument) {
    this(MWEngineCoreJNI.new_SampleEvent__SWIG_1(BaseInstrument.getCPtr(aInstrument), aInstrument), true);
  }

  public void play() {
    MWEngineCoreJNI.SampleEvent_play(swigCPtr, this);
  }

  public void setEventLength(int value) {
    MWEngineCoreJNI.SampleEvent_setEventLength(swigCPtr, this, value);
  }

  public void setEventEnd(int value) {
    MWEngineCoreJNI.SampleEvent_setEventEnd(swigCPtr, this, value);
  }

  public int getBufferRangeStart() {
    return MWEngineCoreJNI.SampleEvent_getBufferRangeStart(swigCPtr, this);
  }

  public void setBufferRangeStart(int value) {
    MWEngineCoreJNI.SampleEvent_setBufferRangeStart(swigCPtr, this, value);
  }

  public int getBufferRangeEnd() {
    return MWEngineCoreJNI.SampleEvent_getBufferRangeEnd(swigCPtr, this);
  }

  public void setBufferRangeEnd(int value) {
    MWEngineCoreJNI.SampleEvent_setBufferRangeEnd(swigCPtr, this, value);
  }

  public int getBufferRangeLength() {
    return MWEngineCoreJNI.SampleEvent_getBufferRangeLength(swigCPtr, this);
  }

  public boolean setSample(SWIGTYPE_p_AudioBuffer sampleBuffer) {
    return MWEngineCoreJNI.SampleEvent_setSample__SWIG_0(swigCPtr, this, SWIGTYPE_p_AudioBuffer.getCPtr(sampleBuffer));
  }

  public boolean setSample(SWIGTYPE_p_AudioBuffer sampleBuffer, long sampleRate) {
    return MWEngineCoreJNI.SampleEvent_setSample__SWIG_1(swigCPtr, this, SWIGTYPE_p_AudioBuffer.getCPtr(sampleBuffer), sampleRate);
  }

  public float getPlaybackRate() {
    return MWEngineCoreJNI.SampleEvent_getPlaybackRate(swigCPtr, this);
  }

  public void setPlaybackRate(float value) {
    MWEngineCoreJNI.SampleEvent_setPlaybackRate(swigCPtr, this, value);
  }

  public boolean isLoopeable() {
    return MWEngineCoreJNI.SampleEvent_isLoopeable(swigCPtr, this);
  }

  public void setLoopeable(boolean value, int crossfadeInMilliseconds) {
    MWEngineCoreJNI.SampleEvent_setLoopeable(swigCPtr, this, value, crossfadeInMilliseconds);
  }

  public int getReadPointer() {
    return MWEngineCoreJNI.SampleEvent_getReadPointer(swigCPtr, this);
  }

  public int getLoopStartOffset() {
    return MWEngineCoreJNI.SampleEvent_getLoopStartOffset(swigCPtr, this);
  }

  public void setLoopStartOffset(int value) {
    MWEngineCoreJNI.SampleEvent_setLoopStartOffset(swigCPtr, this, value);
  }

  public int getLoopEndOffset() {
    return MWEngineCoreJNI.SampleEvent_getLoopEndOffset(swigCPtr, this);
  }

  public void setLoopEndOffset(int value) {
    MWEngineCoreJNI.SampleEvent_setLoopEndOffset(swigCPtr, this, value);
  }

  public int getEventLength() {
    return MWEngineCoreJNI.SampleEvent_getEventLength(swigCPtr, this);
  }

  public int getOriginalEventLength() {
    return MWEngineCoreJNI.SampleEvent_getOriginalEventLength(swigCPtr, this);
  }

  public int getEventEnd() {
    return MWEngineCoreJNI.SampleEvent_getEventEnd(swigCPtr, this);
  }

  public boolean getRangeBasedPlayback() {
    return MWEngineCoreJNI.SampleEvent_getRangeBasedPlayback(swigCPtr, this);
  }

  public void setRangeBasedPlayback(boolean value) {
    MWEngineCoreJNI.SampleEvent_setRangeBasedPlayback(swigCPtr, this, value);
  }

  public boolean getBufferForRange(SWIGTYPE_p_AudioBuffer buffer, int readPos) {
    return MWEngineCoreJNI.SampleEvent_getBufferForRange(swigCPtr, this, SWIGTYPE_p_AudioBuffer.getCPtr(buffer), readPos);
  }

  public int getPlaybackPosition() {
    return MWEngineCoreJNI.SampleEvent_getPlaybackPosition(swigCPtr, this);
  }

  public long getSampleRate() {
    return MWEngineCoreJNI.SampleEvent_getSampleRate(swigCPtr, this);
  }

}
