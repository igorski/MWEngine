/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.mwengine.core;

public class SampleManager {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SampleManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SampleManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MWEngineCoreJNI.delete_SampleManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void setSample(String aIdentifier, SWIGTYPE_p_AudioBuffer aBuffer, long sampleRate) {
    MWEngineCoreJNI.SampleManager_setSample(aIdentifier, SWIGTYPE_p_AudioBuffer.getCPtr(aBuffer), sampleRate);
  }

  public static SWIGTYPE_p_AudioBuffer getSample(String aIdentifier) {
    long cPtr = MWEngineCoreJNI.SampleManager_getSample(aIdentifier);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AudioBuffer(cPtr, false);
  }

  public static int getSampleLength(String aIdentifier) {
    return MWEngineCoreJNI.SampleManager_getSampleLength(aIdentifier);
  }

  public static int getSampleRateForSample(String aIdentifier) {
    return MWEngineCoreJNI.SampleManager_getSampleRateForSample(aIdentifier);
  }

  public static boolean hasSample(String aIdentifier) {
    return MWEngineCoreJNI.SampleManager_hasSample(aIdentifier);
  }

  public static void removeSample(String aIdentifier, boolean free) {
    MWEngineCoreJNI.SampleManager_removeSample(aIdentifier, free);
  }

  public static void flushSamples() {
    MWEngineCoreJNI.SampleManager_flushSamples();
  }

  public SampleManager() {
    this(MWEngineCoreJNI.new_SampleManager(), true);
  }

}
