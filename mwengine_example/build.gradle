apply plugin: 'com.android.application'

dependencies {
    // builds library module as Android Archive (.AAR) as a dependency of this example project
    // alternatively (for your custom projects), load prebuilt mwengine library .AAR by copying to libs folder
    implementation project(':mwengine')
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        // the sdk version range below matches the one of the library. You can change these as you see fit
        // (as long as the minSdkVersion is higher than the library one!) The minimum supported SDK
        // version for MWEngine is 16 (Jelly Bean/4.1). While support of AAudio was only added in version 26 (Oreo/8),
        // we can still provide AAudio by loading it at runtime when the device supports it. You can
        // thus set the value of minSdkVersion to whatever fits your use case.

        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"

        // these values must match the ABI's defined in mwengine/build.gradle
        // to prevent UnsatisfiedLinkError when this app tries to serve an unsupported architecture

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }
    if ( project.hasProperty( "RELEASE_STORE_FILE" )) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if ( project.hasProperty( "RELEASE_STORE_FILE" )) {
                signingConfig signingConfigs.release
            }
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
//        flatDir {
//            dirs 'libs' // when MWEngine AAR files are included as local file
//        }
    }
}
