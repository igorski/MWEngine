/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.mwengine.core;

public class DrumPattern {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DrumPattern(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DrumPattern obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MWEngineCoreJNI.delete_DrumPattern(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DrumPattern(int aNum, BaseInstrument aInstrument) {
    this(MWEngineCoreJNI.new_DrumPattern(aNum, BaseInstrument.getCPtr(aInstrument), aInstrument), true);
  }

  public void setNum(int value) {
    MWEngineCoreJNI.DrumPattern_num_set(swigCPtr, this, value);
  }

  public int getNum() {
    return MWEngineCoreJNI.DrumPattern_num_get(swigCPtr, this);
  }

  public void setEventAmount(int value) {
    MWEngineCoreJNI.DrumPattern_eventAmount_set(swigCPtr, this, value);
  }

  public int getEventAmount() {
    return MWEngineCoreJNI.DrumPattern_eventAmount_get(swigCPtr, this);
  }

  public void setAudioEvents(SWIGTYPE_p_std__vectorT_MWEngine__BaseAudioEvent_p_t value) {
    MWEngineCoreJNI.DrumPattern_audioEvents_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_MWEngine__BaseAudioEvent_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_MWEngine__BaseAudioEvent_p_t getAudioEvents() {
    long cPtr = MWEngineCoreJNI.DrumPattern_audioEvents_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_MWEngine__BaseAudioEvent_p_t(cPtr, false);
  }

  public void addToInstrument() {
    MWEngineCoreJNI.DrumPattern_addToInstrument(swigCPtr, this);
  }

  public void removeFromInstrument() {
    MWEngineCoreJNI.DrumPattern_removeFromInstrument(swigCPtr, this);
  }

  public void updateTimbre(int newTimbre) {
    MWEngineCoreJNI.DrumPattern_updateTimbre(swigCPtr, this, newTimbre);
  }

  public void cacheEvents(int aDrumTimbre) {
    MWEngineCoreJNI.DrumPattern_cacheEvents(swigCPtr, this, aDrumTimbre);
  }

  public void addDrumEvent(int aPosition, int aDrumType, int aDrumTimbre) {
    MWEngineCoreJNI.DrumPattern_addDrumEvent(swigCPtr, this, aPosition, aDrumType, aDrumTimbre);
  }

  public void removeDrumEvent(int aPosition, int aType) {
    MWEngineCoreJNI.DrumPattern_removeDrumEvent(swigCPtr, this, aPosition, aType);
  }

  public boolean hasContent() {
    return MWEngineCoreJNI.DrumPattern_hasContent(swigCPtr, this);
  }

  public void clear() {
    MWEngineCoreJNI.DrumPattern_clear(swigCPtr, this);
  }

  public SWIGTYPE_p_int getKickPattern() {
    long cPtr = MWEngineCoreJNI.DrumPattern_getKickPattern(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int getSnarePattern() {
    long cPtr = MWEngineCoreJNI.DrumPattern_getSnarePattern(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int getStickPattern() {
    long cPtr = MWEngineCoreJNI.DrumPattern_getStickPattern(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public SWIGTYPE_p_int getHatPattern() {
    long cPtr = MWEngineCoreJNI.DrumPattern_getHatPattern(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public void setKickPattern(SWIGTYPE_p_int aPattern, int arrayLength) {
    MWEngineCoreJNI.DrumPattern_setKickPattern(swigCPtr, this, SWIGTYPE_p_int.getCPtr(aPattern), arrayLength);
  }

  public void setSnarePattern(SWIGTYPE_p_int aPattern, int arrayLength) {
    MWEngineCoreJNI.DrumPattern_setSnarePattern(swigCPtr, this, SWIGTYPE_p_int.getCPtr(aPattern), arrayLength);
  }

  public void setStickPattern(SWIGTYPE_p_int aPattern, int arrayLength) {
    MWEngineCoreJNI.DrumPattern_setStickPattern(swigCPtr, this, SWIGTYPE_p_int.getCPtr(aPattern), arrayLength);
  }

  public void setHatPattern(SWIGTYPE_p_int aPattern, int arrayLength) {
    MWEngineCoreJNI.DrumPattern_setHatPattern(swigCPtr, this, SWIGTYPE_p_int.getCPtr(aPattern), arrayLength);
  }

  public final static int AMOUNT_OF_STEPS = MWEngineCoreJNI.DrumPattern_AMOUNT_OF_STEPS_get();
  public final static int EVENT_OFF = MWEngineCoreJNI.DrumPattern_EVENT_OFF_get();
  public final static int EVENT_ON = MWEngineCoreJNI.DrumPattern_EVENT_ON_get();
}
