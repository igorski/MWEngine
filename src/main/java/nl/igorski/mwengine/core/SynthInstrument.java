/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nl.igorski.mwengine.core;

public class SynthInstrument extends BaseInstrument {
  private transient long swigCPtr;

  protected SynthInstrument(long cPtr, boolean cMemoryOwn) {
    super(MWEngineCoreJNI.SynthInstrument_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SynthInstrument obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MWEngineCoreJNI.delete_SynthInstrument(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SynthInstrument() {
    this(MWEngineCoreJNI.new_SynthInstrument(), true);
  }

  public void setOctave(int value) {
    MWEngineCoreJNI.SynthInstrument_octave_set(swigCPtr, this, value);
  }

  public int getOctave() {
    return MWEngineCoreJNI.SynthInstrument_octave_get(swigCPtr, this);
  }

  public void setKeyboardOctave(int value) {
    MWEngineCoreJNI.SynthInstrument_keyboardOctave_set(swigCPtr, this, value);
  }

  public int getKeyboardOctave() {
    return MWEngineCoreJNI.SynthInstrument_keyboardOctave_get(swigCPtr, this);
  }

  public void setKeyboardVolume(float value) {
    MWEngineCoreJNI.SynthInstrument_keyboardVolume_set(swigCPtr, this, value);
  }

  public float getKeyboardVolume() {
    return MWEngineCoreJNI.SynthInstrument_keyboardVolume_get(swigCPtr, this);
  }

  public void setSynthesizer(SWIGTYPE_p_Synthesizer value) {
    MWEngineCoreJNI.SynthInstrument_synthesizer_set(swigCPtr, this, SWIGTYPE_p_Synthesizer.getCPtr(value));
  }

  public SWIGTYPE_p_Synthesizer getSynthesizer() {
    long cPtr = MWEngineCoreJNI.SynthInstrument_synthesizer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Synthesizer(cPtr, false);
  }

  public int getOscillatorAmount() {
    return MWEngineCoreJNI.SynthInstrument_getOscillatorAmount(swigCPtr, this);
  }

  public void setOscillatorAmount(int aAmount) {
    MWEngineCoreJNI.SynthInstrument_setOscillatorAmount(swigCPtr, this, aAmount);
  }

  public void reserveOscillators(int aAmount) {
    MWEngineCoreJNI.SynthInstrument_reserveOscillators(swigCPtr, this, aAmount);
  }

  public OscillatorProperties getOscillatorProperties(int aOscillatorNum) {
    long cPtr = MWEngineCoreJNI.SynthInstrument_getOscillatorProperties(swigCPtr, this, aOscillatorNum);
    return (cPtr == 0) ? null : new OscillatorProperties(cPtr, false);
  }

  public void setArpeggiator(Arpeggiator value) {
    MWEngineCoreJNI.SynthInstrument_arpeggiator_set(swigCPtr, this, Arpeggiator.getCPtr(value), value);
  }

  public Arpeggiator getArpeggiator() {
    long cPtr = MWEngineCoreJNI.SynthInstrument_arpeggiator_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Arpeggiator(cPtr, false);
  }

  public void setArpeggiatorActive(boolean value) {
    MWEngineCoreJNI.SynthInstrument_arpeggiatorActive_set(swigCPtr, this, value);
  }

  public boolean getArpeggiatorActive() {
    return MWEngineCoreJNI.SynthInstrument_arpeggiatorActive_get(swigCPtr, this);
  }

  public void setROsc(RouteableOscillator value) {
    MWEngineCoreJNI.SynthInstrument_rOsc_set(swigCPtr, this, RouteableOscillator.getCPtr(value), value);
  }

  public RouteableOscillator getROsc() {
    long cPtr = MWEngineCoreJNI.SynthInstrument_rOsc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RouteableOscillator(cPtr, false);
  }

  public void setAdsr(ADSR value) {
    MWEngineCoreJNI.SynthInstrument_adsr_set(swigCPtr, this, ADSR.getCPtr(value), value);
  }

  public ADSR getAdsr() {
    long cPtr = MWEngineCoreJNI.SynthInstrument_adsr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ADSR(cPtr, false);
  }

}
